name: macos-multi-arch-build

on: [push, pull_request]

jobs:
  macos-build:
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        architecture: ['arm64', 'x86_64']  # Build for both architectures

    steps:
      - name: Sync repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rosetta 2 (Only for x86_64)
        if: matrix.architecture == 'x86_64'
        run: |
          softwareupdate --install-rosetta --agree-to-license || echo "Rosetta already installed"

      - name: Set up Homebrew
        shell: bash
        run: |
          if [ "${{ matrix.architecture }}" == "x86_64" ]; then
            # Install x86_64 Homebrew if not already installed
            if [ ! -d "/usr/local/Homebrew" ]; then
              echo "Installing x86_64 Homebrew..."
              arch -x86_64 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
            fi
            export PATH="/usr/local/bin:/usr/local/sbin:$PATH"
          else
            # Use arm64 Homebrew
            export PATH="/opt/homebrew/bin:/opt/homebrew/sbin:$PATH"
          fi
          echo "PATH=$PATH" >> $GITHUB_ENV

      - name: Install Dependencies
        run: |
          brew update
          brew install cmake mosquitto zeromq

      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v3
        with:
          path: '${{ github.workspace }}/qt_installation/'
          key: ${{ runner.os }}-QtCache-${{ matrix.architecture }}

      - name: Install Qt
        uses: jurplel/install-qt-action@v2.13.0
        with:
          version: '5.15.2'
          host: 'mac'
          arch: '${{ matrix.architecture }}'
          dir: '${{ github.workspace }}/qt_installation/'
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
          aqtversion: '==3.1.17'
          py7zrversion: '==0.22.0'

      - name: Build PlotJuggler for ${{ matrix.architecture }}
        shell: bash
        run: |
          cmake -B build -DCMAKE_INSTALL_PREFIX=install -DCMAKE_OSX_ARCHITECTURES=${{ matrix.architecture }} PlotJuggler
          cmake --build build --target install

      - name: Archive Build Artifacts
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: PlotJuggler-${{ matrix.architecture }}
          path: build
